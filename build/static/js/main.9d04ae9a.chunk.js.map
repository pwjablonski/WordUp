{"version":3,"sources":["components/Topbar.js","components/Cell.js","actions/applicationLoaded.js","actions/ui.js","actions/puzzles.js","selectors/getCurrentPuzzleKey.js","selectors/getCurrentPuzzle.js","selectors/getCurrentDirection.js","selectors/getCurrentClueNum.js","selectors/getCurrentPuzzleAuthor.js","selectors/getCurrentPuzzleGrid.js","selectors/getCurrentCell.js","selectors/getHighlightedCells.js","selectors/getCurrentPuzzleTitle.js","selectors/getClueLists.js","selectors/getHighlightedLetters.js","components/Board.js","components/ClueBar.js","components/ClueList.js","components/PuzzleHeader.js","components/PuzzleLayout.js","components/Puzzle.js","components/Layout.js","reducers/currentPuzzle.js","reducers/ui.js","reducers/puzzles.js","util/createEmptyPuzzle.js","reducers/index.js","logic/applicationLoaded.js","util/updateClues.js","util/findClueAndHighlightedCells.js","logic/updateUI.js","logic/index.js","logic/createPuzzle.js","logic/keyInputted.js","logic/cellSelected.js","logic/updatePuzzle.js","logic/clueListItemClicked.js","util/history.js","index.js","components/App.js","createApplicationStore.js"],"names":["Topbar","react_default","a","createElement","className","react_fontawesome_index_es","icon","faCog","size","Cell","_ref","cellData","isHighlighted","isSelected","onCellSelected","index","fill","clueNum","xOffset","yOffset","Math","floor","isBlack","onClick","x","y","width","height","classnames","cell-selected","cell-black","cell-highlighted","textAnchor","fontSize","length","createAction","updateCurrentCell","keyInputted","key","updateHighlightedCells","cells","cellSelected","cell","updateCurrentClue","clue","updateCurrentDirection","direction","clueListItemClicked","updateUI","nextCell","puzzleCreated","puzzleKey","createPuzzle","updateCellFill","currentPuzzleKey","updatePuzzle","gridUpdated","grid","clues","clueTextChanged","value","authorChanged","titleChanged","getCurrentPuzzleKey","state","currentPuzzle","getCurrentPuzzle","puzzles","getCurrentDirection","ui","currentDirection","getCurrentClueNum","currentClueNum","getCurrentPuzzleAuthor","author","getCurrentCell","currentCell","getHighlightedCells","highlightedCells","title","getClueLists","getHighlightedLetters","getCurrentPuzzleGrid","word","i","letter","Board","dispatch","useDispatch","useSelector","viewBox","xmlns","preserveAspectRatio","tabIndex","onKeyDown","e","map","includes","ClueBar","num","letters","concat","ClueList","clue-selected","react_contenteditable_default","html","text","onChange","target","handleChange","tagName","PuzzleHeader","getCurrentPuzzleTitle","PuzzleLayout","across","down","Puzzle","isNull","pulse","faSpinner","Layout","useEffect","applicationLoaded","Fragment","react_router","exact","path","component","handleActions","Object","defineProperty","payload","produce","draft","_handleActions","_ref2","_ref3","_ref4","puzzles_handleActions","cols","rows","puzzle","clueCount","push","createEmptyPuzzle","_ref2$payload","_ref3$payload","_ref4$payload","_ref5","_ref5$payload","_ref6","_ref6$payload","rootReducer","action","combineReducers","createLogic","type","process","_process","asyncToGenerator","regenerator_default","mark","_callee","done","wrap","_context","prev","next","stop","_x","_x2","_x3","apply","this","arguments","updateClueNums","newGrid","newClues","label","_loop","find","oldClue","_loop2","findClueAndHilightecCells","lineStart","lineEnd","incrementor","newClue","newHighlightedCells","shouldReturnCells","logic","shortid","generate","getState","_nextCell","t0","abrupt","toUpperCase","_updateClues","updateClues","_findClueAndHighlight","findClueAndHighlightedCells","_ref$action$payload","currentPuzzleGrid","selectedCell","item","createBrowserHistory","ReactDOM","render","store","logicMiddleware","createLogicMiddleware","rootLogic","logicEnhancer","applyMiddleware","createStore","reducers","composeWithDevTools","createApplicationStore","es","history","document","getElementById"],"mappings":"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","file":"static/js/main.9d04ae9a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../css/App.css\";\nimport ContentEditable from 'react-contenteditable'\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function Topbar() {\n  return (\n    <div className=\"topbar\">\n      <div className=\"topbar-brand\"> \n          WU\n      </div>\n      <div className=\"topbar-tools\">\n        <div className=\"topbar-button topbar-button-item\">\n          <FontAwesomeIcon\n            className=\"\"\n            icon={faCog}\n            size=\"2x\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../css/App.css\";\nimport classnames from \"classnames\";\n\nexport default function Cell({\n  cellData,\n  isHighlighted,\n  isSelected,\n  onCellSelected\n}) {\n  \n  const { index, fill, clueNum } = cellData\n  const xOffset = 33 * (index % 15);\n  const yOffset = 33 * Math.floor(index / 15);\n  const isBlack = fill === \".\";\n\n  return (\n    <g onClick={() => onCellSelected(index)}>\n      <rect\n        x={3 + xOffset}\n        y={3 + yOffset}\n        width=\"33.00\"\n        height=\"33.00\"\n        className={classnames(\n          \"cell\",\n          { \"cell-selected\": isSelected },\n          { \"cell-black\": isBlack },\n          { \"cell-highlighted\": isHighlighted }\n        )}\n      />\n      <text\n        x={5 + xOffset}\n        y={14.5 + yOffset}\n        textAnchor=\"start\"\n        fontSize=\"11.00\"\n      >\n        {clueNum}\n      </text>\n      <text\n        x={19.5 + xOffset}\n        y={33.25 + yOffset}\n        textAnchor=\"middle\"\n        fontSize={22 - fill.length * 2.5}\n      >\n        {fill}\n      </text>\n    </g>\n  );\n}\n\nCell.propTypes = {\n  cellData: PropTypes.object.isRequired,\n  onCellSelected: PropTypes.func.isRequired\n};\n","import { createAction } from \"redux-actions\";\n\nexport default createAction(\"APPLICATION_LOADED\");\n","import { createAction } from \"redux-actions\";\n\nexport const updateCurrentCell = createAction(\"UPDATE_CURRENT_CELL\", index => ({\n  index\n}));\n\nexport const keyInputted = createAction(\"KEY_INPUTTED\", key => ({ key }));\n\nexport const updateHighlightedCells = createAction(\n  \"UPDATE_HIGLIGHTED_CELLS\",\n  cells => ({ cells })\n);\n\nexport const cellSelected = createAction(\"CELL_SELECTED\", cell => ({ cell }));\n\nexport const updateCurrentClue = createAction(\"UPDATE_CURRENT_CLUE\", clue => ({\n  clue\n}));\n\nexport const updateCurrentDirection = createAction(\n  \"UPDATE_CURRENT_DIRECTION\",\n  direction => ({ direction })\n);\n\nexport const clueListItemClicked = createAction(\n  \"CLUE_LIST_ITEM_CLICKED\",\n  (clueNum, direction) => ({ clueNum, direction })\n);\n\nexport const updateUI = createAction(\n  \"UPDATE_UI\",\n  (nextCell, direction) => ({nextCell, direction})\n);","import { createAction } from \"redux-actions\";\n\nexport const puzzleCreated = createAction(\"PUZZLE_CREATED\", \n    (puzzleKey) => ({puzzleKey})\n);\n\nexport const createPuzzle = createAction(\"CREATE_PUZZLE\");\n\nexport const updateCellFill = createAction(\"UPDATE_CELL_FILL\",\n    (currentPuzzleKey, cell, fill) => ({currentPuzzleKey, cell, fill})\n);\n\nexport const updatePuzzle = createAction(\"UPDATE_PUZZLE\",\n    (key) => ({key})\n);\n\nexport const gridUpdated = createAction(\"GRID_UPDATED\",\n    (currentPuzzleKey, grid, clues) => ({currentPuzzleKey, grid, clues})\n);\n\nexport const clueTextChanged = createAction(\"CLUE_TEXT_CHANGED\",\n    (currentPuzzleKey, direction, index, value) =>\n    ({currentPuzzleKey, direction, index, value})\n);\n\nexport const authorChanged = createAction(\"AUTHOR_CHANGED\",\n    (currentPuzzleKey, value) =>\n    ({currentPuzzleKey, value})\n);\n\nexport const titleChanged = createAction(\"TITLE_CHANGED\",\n    (currentPuzzleKey, value) =>\n    ({currentPuzzleKey, value})\n);","export default function getCurrentPuzzleKey(state) {\n    return state.currentPuzzle.puzzleKey;\n}","import getCurrentPuzzleKey from './getCurrentPuzzleKey'\n\nexport default function getCurrentPuzzle(state) {\n    const currentPuzzleKey = getCurrentPuzzleKey(state);\n    if(currentPuzzleKey){\n        return state.puzzles[state.currentPuzzle.puzzleKey];\n    }\n    return null;\n}","export default function getCurrentDirection(state) {\n  return state.ui.currentDirection;\n}\n","export default function getCurrentClueNum(state) {\n  return state.ui.currentClueNum;\n}\n  ","import getCurrentPuzzle from './getCurrentPuzzle'\n\nexport default function getCurrentPuzzleAuthor(state) {\n  const currentPuzzle = getCurrentPuzzle(state);\n  if(currentPuzzle) {\n    return currentPuzzle.author;\n  }\n  return null\n}\n","import getCurrentPuzzle from './getCurrentPuzzle'\n\nexport default function getCurrentPuzzleAuthor(state) {\n  const currentPuzzle = getCurrentPuzzle(state);\n  if(currentPuzzle) {\n    return currentPuzzle.grid;\n  }\n  return null\n}\n","export default function getCurrentCell(state) {\n  return state.ui.currentCell;\n}\n","export default function getHighlightedCells(state) {\n  return state.ui.highlightedCells;\n}\n","import getCurrentPuzzle from './getCurrentPuzzle'\n\nexport default function getCurrentPuzzleAuthor(state) {\n  const currentPuzzle = getCurrentPuzzle(state);\n  if(currentPuzzle) {\n    return currentPuzzle.title;\n  }\n  return null\n}\n","import getCurrentPuzzle from './getCurrentPuzzle'\n\nexport default function getClueLists(state) {\n  const currentPuzzle = getCurrentPuzzle(state);\n  if(currentPuzzle) {\n    return currentPuzzle.clues;\n  }\n  return null\n}\n","import getHighlightedCells from \"./getHighlightedCells\"\nimport getCurrentPuzzleGrid from \"./getCurrentPuzzleGrid\"\nimport getCurrentCell from \"./getCurrentCell\";\n\nexport default function getHighlightedLetters(state) {\n    const highlightedCells =  getHighlightedCells(state)\n    const grid =  getCurrentPuzzleGrid(state)\n    const currentCell = getCurrentCell(state);\n\n    if(grid[currentCell].fill === \".\"){\n        return null\n    }\n    let word = \"\";\n    for(let i = 0; i < highlightedCells.length; i += 1){\n        const letter =  grid[highlightedCells[i]].fill;\n        if (letter ===  \"\"){\n            word += \"_ \"\n        } else {\n            word += letter + \" \"\n        }\n    }\n    return word;\n}\n  ","import React from \"react\";\nimport \"../css/App.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cell from \"./Cell\";\nimport { cellSelected, keyInputted } from \"../actions\";\n\nimport {\n  getCurrentPuzzleGrid, getCurrentCell, getHighlightedCells\n} from \"../selectors\";\n\nexport default function Board() {\n  const dispatch = useDispatch();\n  const grid = useSelector(getCurrentPuzzleGrid);\n  const currentCell = useSelector(getCurrentCell);\n  const highlightedCells = useSelector(getHighlightedCells);\n\n  function onCellSelected(i) {\n    dispatch(cellSelected(i));\n  }\n\n  function onInput(e) {\n    dispatch(keyInputted(e.key));\n  }\n\n  return (\n    <svg\n      className=\"board\"\n      viewBox=\"0 0 500 500\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      preserveAspectRatio=\"xMidYMin meet\"\n      tabIndex={1}\n      onKeyDown={onInput}\n    >\n      <g className=\"cells\">\n        {grid.map((cellData) => {\n          const isSelected = currentCell === cellData.index;\n          const isHighlighted= highlightedCells.includes(cellData.index);\n \n          return (\n            <Cell\n              cellData={cellData}\n              isSelected={isSelected}\n              isHighlighted={isHighlighted}\n              key={cellData.index}\n              onCellSelected={onCellSelected}\n            />\n          );\n        })}\n      </g>\n    </svg>\n  );\n}\n","import React from \"react\";\nimport \"../css/App.css\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  getCurrentClueNum,\n  getCurrentDirection,\n  getHighlightedLetters\n} from \"../selectors\";\n\nexport default function ClueBar() {\n  const clueNum = useSelector(getCurrentClueNum);\n  const letters = useSelector(getHighlightedLetters);\n  const currentDirection = useSelector(getCurrentDirection);\n  let num;\n  if (clueNum) {\n    const letter = currentDirection === \"across\" ? \"A\" : \"D\";\n    num = `${clueNum}${letter}`\n  }\n\n  return (\n    <div className=\"cluebar\">\n      <div className=\"cluebar-number\">{num}</div>\n      <div className=\"cluebar-fill\">{letters}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../css/App.css\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clueListItemClicked, clueTextChanged } from \"../actions\";\nimport ContentEditable from 'react-contenteditable'\nimport { getCurrentPuzzleKey } from \"../selectors\";\n\nimport { getCurrentClueNum, getCurrentDirection } from \"../selectors\";\n\nexport default function ClueList({ clues, direction }) {\n  const dispatch = useDispatch();\n  const currentPuzzleKey = useSelector(getCurrentPuzzleKey);\n  const currentClueNum = useSelector(getCurrentClueNum);\n  const currentDirection = useSelector(getCurrentDirection);\n\n  function onClueListItemClicked(clueNum) {\n    dispatch(clueListItemClicked(clueNum, direction));\n  }\n\n  function handleChange(e, i){\n    dispatch(clueTextChanged(\n      currentPuzzleKey,\n      direction,\n      i,\n      e.target.value\n    ))\n  }\n  return (\n    <div className=\"cluelist\">\n      <h3 className=\"cluelist-title\">{direction}</h3>\n      <ol className=\"cluelist-list\">\n        {clues.map(function(clue, i) {\n          return (\n            <li\n              className={classnames(\"clue\", {\n                \"clue-selected\":\n                  currentClueNum === clue.clueNum &&\n                  currentDirection === direction\n              })}\n              key={clue.clueNum}\n              onClick={() => onClueListItemClicked(clue.clueNum)}\n            >\n              <div className=\"clue-text\">\n                <span>{clue.clueNum}. </span>\n                <ContentEditable\n                  html={clue.text}\n                  onChange={(e)=>handleChange(e, i)}\n                  tagName='span'\n                />\n              </div>\n            </li>\n          );\n        })}\n      </ol>\n    </div>\n  );\n}\n\nClueList.propTypes = {\n  clues: PropTypes.array.isRequired,\n  direction: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport \"../css/App.css\";\nimport ContentEditable from 'react-contenteditable'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCurrentPuzzleTitle,\n  getCurrentPuzzleAuthor,\n  getCurrentPuzzleKey\n} from \"../selectors\";\nimport {\n  titleChanged,\n  authorChanged\n} from \"../actions\";\n\nexport default function PuzzleHeader() {\n    const dispatch = useDispatch();\n    const author = useSelector(getCurrentPuzzleAuthor);\n    const title = useSelector(getCurrentPuzzleTitle);\n    const currentPuzzleKey = useSelector(getCurrentPuzzleKey);\n  \n    function handleTitleChange(e){\n      dispatch(titleChanged(currentPuzzleKey, e.target.value));\n    }\n  \n    function handleAuthorChange(e){\n      dispatch(authorChanged(currentPuzzleKey, e.target.value));\n    }\n  \n    return (\n      <div className=\"puzzle-header\">\n        <div className=\"puzzle-header-title\">\n            <ContentEditable\n            html={title}\n            onChange={handleTitleChange}\n            tagName='span'\n            />\n        </div>\n        <div className=\"puzzle-header-author\">\n            <span className=\"puzzle-header-by\">By </span>\n            <ContentEditable\n            html={author}\n            onChange={handleAuthorChange}\n            tagName='span'\n            />\n        </div>\n      </div>\n    );\n  }\n  ","import React from \"react\";\nimport \"../css/App.css\";\nimport { useSelector } from \"react-redux\";\nimport Board from \"./Board\";\nimport ClueBar from \"./ClueBar\";\nimport ClueList from \"./ClueList\";\nimport PuzzleHeader from \"./PuzzleHeader\";\nimport { getClueLists } from \"../selectors\";\n\nexport default function PuzzleLayout() {\n  const clues = useSelector(getClueLists);\n\n  return (\n    <div className=\"layout\">\n      <div className=\"layout-left\">\n        <PuzzleHeader/>\n        <Board />\n      </div>\n      <div className=\"layout-right\">\n        <ClueBar />\n        <div className=\"clue-list\">\n          <ClueList clues={clues.across} direction=\"across\" />\n          <ClueList clues={clues.down} direction=\"down\" />\n        </div> \n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../css/App.css\";\nimport PropTypes from \"prop-types\";\nimport Topbar from './Topbar';\nimport { useSelector } from \"react-redux\";\nimport PuzzleLayout from \"./PuzzleLayout\";\nimport { getCurrentPuzzle } from \"../selectors\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport isNull from 'lodash/isNull'\n\nexport default function Puzzle() {\n  const currentPuzzle = useSelector(getCurrentPuzzle);\n\n  if (isNull(currentPuzzle)) {\n    return (\n      <div className=\"puzzle__loading\">\n        <FontAwesomeIcon pulse icon={faSpinner} size=\"2x\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"puzzle\">\n      <Topbar />\n      <PuzzleLayout />\n    </div>\n  );\n}\n\nPuzzle.propTypes = {\n  match: PropTypes.object.isRequired\n};\n","import React, { useEffect } from \"react\";\nimport \"../css/App.css\";\nimport { Route } from \"react-router-dom\";\nimport Puzzle from \"./Puzzle\";\nimport { useDispatch } from \"react-redux\";\nimport { applicationLoaded } from \"../actions\";\n\n\nexport default function Layout() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(applicationLoaded());\n  });\n\n  return (\n    <>\n      <Route exact path=\"/\" component={Puzzle} />\n    </>\n  );\n}\n","import produce from \"immer\";\nimport { handleActions } from \"redux-actions\";\nimport { puzzleCreated } from \"../actions\";\n\nconst initialState = {\n  puzzleKey: null\n};\n\n/* eslint-disable no-param-reassign */\nexport default handleActions(\n  {\n    [puzzleCreated]: (state, { payload: { puzzleKey } }) =>\n      produce(state, draft => {\n        draft.puzzleKey = puzzleKey;\n      }),\n  },\n  initialState\n);\n\n","import produce from \"immer\";\nimport { handleActions } from \"redux-actions\";\nimport {\n  updateCurrentCell,\n  updateCurrentClue,\n  updateHighlightedCells,\n  updateCurrentDirection,\n} from \"../actions\";\n\nconst initialState = {\n  currentCell: 0,\n  currentDirection: \"across\",\n  currentClueNum: 1,\n  highlightedCells: [],\n};\n\n/* eslint-disable no-param-reassign */\nexport default handleActions(\n  {\n    [updateCurrentCell]: (state, { payload: { index } }) =>\n      produce(state, draft => {\n        draft.currentCell = index;\n      }),\n\n    [updateCurrentClue]: (state, { payload: { clue } }) =>\n      produce(state, draft => {\n        draft.currentClueNum = clue;\n      }),\n\n    [updateHighlightedCells]: (state, { payload: { cells } }) =>\n      produce(state, draft => {\n        draft.highlightedCells = cells;\n      }),\n\n    [updateCurrentDirection]: (state, { payload: { direction } }) =>\n      produce(state, draft => {\n        draft.currentDirection = direction;\n      }),\n  },\n  initialState\n);\n","import produce from \"immer\";\nimport { handleActions } from \"redux-actions\";\nimport {\n  puzzleCreated,\n  updateCellFill,\n  gridUpdated,\n  authorChanged,\n  titleChanged\n} from \"../actions\";\nimport createEmptyPuzzle from \"../util/createEmptyPuzzle\"\nimport { clueTextChanged } from \"../actions/puzzles\";\n\nconst initialState = {};\n\n/* eslint-disable no-param-reassign */\nexport default handleActions(\n  {\n    [puzzleCreated]: (state, { payload: { puzzleKey } }) =>\n      produce(state, draft => {\n        draft[puzzleKey] = createEmptyPuzzle(puzzleKey, 15, 15);\n      }),\n    [updateCellFill]: (state, { payload: { currentPuzzleKey, cell, fill } }) =>\n      produce(state, draft => {\n        draft[currentPuzzleKey][\"grid\"][cell][\"fill\"] = fill;\n      }),\n    [gridUpdated]: (state, { payload: {currentPuzzleKey, grid, clues} }) =>\n      produce(state, draft => {\n        draft[currentPuzzleKey][\"grid\"] = grid;\n        draft[currentPuzzleKey][\"clues\"] = clues;\n      }),\n    [clueTextChanged]: (state, { payload: {currentPuzzleKey, direction, index, value} }) =>\n      produce(state, draft => {\n        draft[currentPuzzleKey][\"clues\"][direction][index][\"text\"] = value;\n      }),\n    [authorChanged]: (state, { payload: {currentPuzzleKey, direction, index, value} }) =>\n      produce(state, draft => {\n        draft[currentPuzzleKey][\"author\"] = value;\n      }),\n    [titleChanged]: (state, { payload: {currentPuzzleKey, direction, index, value} }) =>\n      produce(state, draft => {\n        draft[currentPuzzleKey][\"title\"] = value;\n      }),\n\n  },\n  initialState\n);","export default function createEmptyPuzzle(puzzleKey, cols, rows) {\n    let puzzle = {};\n    puzzle.puzzleKey = puzzleKey\n    puzzle.title = \"Untitled\"\n    puzzle.author = \"No Author\"\n    puzzle.size = {\n      cols: 15,\n      rows: 15\n    }\n    puzzle.grid = []\n    puzzle.clues = {\n        across: [],\n        down: [],\n    }\n    let clueCount = 1;\n    for(let i = 0; i < cols * rows; i += 1) {\n        if (i < 15 && i % 15 === 0) {\n            puzzle.grid.push({index: i, fill: '', clueNum: clueCount})\n            puzzle.clues.down.push({clueNum: clueCount, text: \"(BLANK)\"})\n            puzzle.clues.across.push({clueNum: clueCount, text: \"(BLANK)\"})\n            clueCount += 1;\n        } else if(i < 15) {\n            puzzle.grid.push({index: i, fill: '', clueNum: clueCount})\n            puzzle.clues.down.push({clueNum: clueCount, text: \"(BLANK)\"})\n            clueCount += 1;\n        } else if (i % 15 === 0) {\n            puzzle.grid.push({index: i, fill: '', clueNum: clueCount})\n            puzzle.clues.across.push({clueNum: clueCount, text: \"(BLANK)\"})\n            clueCount += 1;\n        }else {\n            puzzle.grid.push({index: i, fill: '', clueNum: null})\n        }\n    }\n\n    return puzzle\n}\n\n\n// {\n//     title: null,\n//     author: null,\n//     clues: {\n//       across: [],\n//       down: [],\n//     },\n//     grid: [],\n//     size: {\n//       cols: 15,\n//       rows: 15\n//     },\n//   }","import { combineReducers } from \"redux\";\n\nimport currentPuzzle from \"./currentPuzzle\";\nimport ui from \"./ui\";\nimport puzzles from \"./puzzles\";\n\nconst rootReducer = (state, action) => {\n  return combineReducers({\n    currentPuzzle,\n    ui,\n    puzzles\n  })(state, action);\n};\n\nexport default rootReducer;\n","import { createLogic } from \"redux-logic\";\nimport { createPuzzle } from '../actions'\n\nexport default createLogic({\n  type: \"APPLICATION_LOADED\",\n  async process({ action }, dispatch, done) {\n    dispatch(createPuzzle());\n    done();\n  }\n});\n","export default function updateClueNums(puzzle) {\n    const {grid, clues} = puzzle;\n    let newGrid = [];\n    let newClues = {across:[], down:[]};\n    let label = 1;\n    for (let i = 0; i < grid.length; i += 1) {\n      if (grid[i].fill === \".\") {\n        newGrid.push({index: i, fill: grid[i].fill, clueNum: null});\n      } else {\n        if((i % 15 === 0 || grid[i - 1].fill === \".\") && \n          (i < 15 || grid[i - 15].fill === \".\")\n        ){\n          newGrid.push({index: i, fill: grid[i].fill, clueNum: label});\n          newClues.across.push({clueNum:label, text: \"(BLANK)\"})\n          newClues.down.push({clueNum:label, text: \"(BLANK)\"})\n          label += 1;\n        }\n        else if (i % 15 === 0 || grid[i - 1].fill === \".\") {\n          newGrid.push({index: i, fill: grid[i].fill, clueNum: label});\n          newClues.across.push({clueNum:label, text: \"(BLANK)\"})\n          label += 1;\n        } else if (i < 15 || grid[i - 15].fill === \".\") {\n          newGrid.push({index: i, fill: grid[i].fill, clueNum: label});\n          newClues.down.push({clueNum:label, text: \"(BLANK)\"})\n          label += 1;\n        } else {\n          newGrid.push({index: i, fill: grid[i].fill, clueNum: null});\n        }\n      }\n    }\n\n    for(let i = 0; i < newClues.across.length; i +=1) {\n      const clue = clues.across.find(function(oldClue){\n        return newClues.across[i].clueNum === oldClue.clueNum;\n      });\n      if(clue){\n        newClues.across[i].text = clue.text;\n      }\n    }\n    \n    for(let i = 0; i < newClues.down.length; i +=1) {\n      const clue = clues.down.find(function(oldClue){\n        return newClues.down[i].clueNum === oldClue.clueNum;\n      });\n      if(clue){\n        newClues.down[i].text = clue.text;\n      }\n    }\n\n    return {newGrid, newClues};\n}\n","export default function findClueAndHilightecCells(\n    currentDirection,\n    currentCell,\n    grid\n  ) {\n    let newHighlightedCells = [];\n    let lineStart;\n    let lineEnd;\n    let incrementor;\n    let shouldReturnCells = false;\n  \n    if (currentDirection === \"across\") {\n      lineStart = currentCell - (currentCell % 15);\n      lineEnd = lineStart + 15;\n      incrementor = 1;\n    } else if (currentDirection === \"down\") {\n      lineStart = 0 + (currentCell % 15);\n      lineEnd = lineStart + 211;\n      incrementor = 15;\n    }\n  \n    let newClue;\n\n    if(grid[currentCell].fill === \".\"){\n      newClue = null;\n    } else {\n      newClue = grid[lineStart].clueNum;\n      for (let i = lineStart; i < lineEnd; i += incrementor) {\n        if (i === currentCell) {\n          newHighlightedCells.push(i);\n          shouldReturnCells = true;\n        } else if (grid[i].fill === \".\" && shouldReturnCells) {\n          return { newClue, newHighlightedCells };\n        } else if (grid[i].fill === \".\" && !shouldReturnCells) {\n          newHighlightedCells = [];\n          newClue = grid[i + incrementor].clueNum;\n        } else {\n          newHighlightedCells.push(i);\n        }\n      }\n    }\n    return { newClue, newHighlightedCells };\n  }\n  ","import { createLogic } from \"redux-logic\";\nimport {\n    updateCurrentCell,\n    updateCurrentDirection,\n    updateCurrentClue,\n    updateHighlightedCells\n} from \"../actions\"\nimport findClueAndHighlightedCells from \"../util/findClueAndHighlightedCells\"\nimport { getCurrentPuzzleGrid } from \"../selectors\";\n\nexport default createLogic({\n  type: \"UPDATE_UI\",\n  async process({getState, action}, dispatch, done) {\n    const state = getState()\n    const grid = getCurrentPuzzleGrid(state)\n    dispatch(updateCurrentCell(action.payload.nextCell));\n    dispatch(updateCurrentDirection(action.payload.direction));\n\n    const {newClue, newHighlightedCells} = findClueAndHighlightedCells(\n      action.payload.direction,\n      action.payload.nextCell,\n      grid\n    )\n    dispatch(updateCurrentClue(newClue));\n    dispatch(updateHighlightedCells(newHighlightedCells));\n\n    done();\n  }\n});","import applicationLoaded from \"./applicationLoaded\";\nimport createPuzzle from \"./createPuzzle\";\nimport keyInputted from \"./keyInputted\";\nimport cellSelected from \"./cellSelected\";\nimport updatePuzzle from \"./updatePuzzle\";\nimport updateUI from \"./updateUI\"\nimport clueListItemClicked from \"./clueListItemClicked\"\n\n\nexport default [\n  applicationLoaded,\n  createPuzzle,\n  keyInputted,\n  cellSelected,\n  updatePuzzle,\n  updateUI,\n  clueListItemClicked,\n];\n","import { createLogic } from \"redux-logic\";\nimport shortid from \"shortid\";\nimport {puzzleCreated} from \"../actions\"\n\nexport default createLogic({\n  type: \"CREATE_PUZZLE\",\n  async process({ action }, dispatch, done) {\n    dispatch(puzzleCreated(shortid.generate()));\n    done();\n  }\n});\n","import { createLogic } from \"redux-logic\";\nimport {\n  updateUI,\n  updatePuzzle\n} from \"../actions\";\nimport {\n  getCurrentCell,\n  getCurrentDirection,\n} from \"../selectors\";\n\nexport default createLogic({\n  type: \"KEY_INPUTTED\",\n  async process(\n    {\n      getState,\n      action: {\n        payload: { key }\n      }\n    },\n    dispatch,\n    done\n  ) {\n    const state = getState();\n    const currentDirection = getCurrentDirection(state);\n    const currentCell = getCurrentCell(state);\n\n    switch (key) {\n      case \"ArrowDown\":\n          if(currentDirection === \"across\"){\n            dispatch(updateUI(currentCell, \"down\"))\n          } else if (currentCell < 210) {\n            dispatch(updateUI(currentCell + 15, currentDirection))\n          } \n          break;\n      case \"ArrowUp\":\n        if(currentDirection === \"across\"){\n          dispatch(updateUI(currentCell, \"down\"))\n        } else if (currentCell > 14) {\n          dispatch(updateUI(currentCell - 15, currentDirection))\n        } \n        break;\n      case \"ArrowRight\":\n        if(currentDirection === \"down\"){\n          dispatch(updateUI(currentCell, \"across\"))\n        } else if (currentCell < 224) {\n          dispatch(updateUI(currentCell + 1, currentDirection))\n        } \n        break;\n      case \"ArrowLeft\":\n        if(currentDirection === \"down\"){\n          dispatch(updateUI(currentCell, \"across\"))\n        } else if (currentCell > 0) {\n          dispatch(updateUI(currentCell - 1, currentDirection))\n        } \n        break;\n      case \"Backspace\": {\n        let nextCell = currentCell; \n        if (currentCell > 0 && currentDirection === \"across\") {\n          nextCell -= 1;  \n        } \n        if (currentCell > 14 && currentDirection === \"down\") {\n          nextCell -= 15;\n        }\n        await dispatch(updatePuzzle(\"\"));\n        dispatch(updateUI(nextCell, currentDirection))\n        break;\n      }\n      case \"Enter\":\n      case \"Tab\": {\n        \n        break;\n      }\n      case \"Control\":\n      case \"Alt\":\n      case \"Meta\":\n      case \"Escape\":\n      case \"Shift\": {\n        break;\n      }\n      default: {\n        let nextCell = currentCell; \n        if (currentCell < 224 && currentDirection === \"across\") {\n          nextCell += 1;\n        } \n        if (currentCell < 210 && currentDirection === \"down\") {\n          nextCell += 15;\n        } \n        await dispatch(updatePuzzle(key.toUpperCase()));\n        dispatch(updateUI(nextCell, currentDirection))\n        break;\n      }\n    }\n    done();\n  }\n});\n","import { createLogic } from \"redux-logic\";\nimport {\n  updateUI\n} from \"../actions\";\nimport {\n  getCurrentCell,\n  getCurrentDirection\n} from \"../selectors\";\n\n\nexport default createLogic({\n  type: \"CELL_SELECTED\",\n  async process(\n    {\n      getState,\n      action: {\n        payload: { cell }\n      }\n    },\n    dispatch,\n    done\n  ) {\n    const state = getState();\n    const currentCell = getCurrentCell(state);\n    const currentDirection = getCurrentDirection(state);\n\n    if (currentCell === cell) {\n      if (currentDirection === \"across\") {\n        dispatch(updateUI(currentCell, \"down\"));\n      } else if (currentDirection === \"down\") {\n        dispatch(updateUI(currentCell, \"across\"));\n      }\n    } else {\n      dispatch(updateUI(cell, currentDirection));\n    }\n    done();\n  }\n});\n","import { createLogic } from \"redux-logic\";\nimport {\n  gridUpdated,\n} from \"../actions\"\nimport {\n  getCurrentPuzzle,\n  getCurrentPuzzleKey,\n  getCurrentCell\n} from \"../selectors\"\nimport updateClues from \"../util/updateClues\"\n\nexport default createLogic({\n  type: \"UPDATE_PUZZLE\",\n  async process({getState, action}, dispatch, done) {\n    const state = getState()\n    const currentPuzzle = getCurrentPuzzle(state)\n    const currentPuzzleKey = getCurrentPuzzleKey(state)\n    const currentCell = getCurrentCell(state)\n\n    currentPuzzle.grid[currentCell].fill = action.payload.key\n    const {newGrid, newClues} = updateClues(currentPuzzle);\n \n    await dispatch(gridUpdated(currentPuzzleKey, newGrid, newClues));\n\n    done();\n  }\n});\n","import { createLogic } from \"redux-logic\";\nimport {\n  updateUI\n} from \"../actions\";\n\nimport {\n    getCurrentPuzzleGrid\n} from \"../selectors\"\n\nexport default createLogic({\n  type: \"CLUE_LIST_ITEM_CLICKED\",\n  async process(\n    {\n      getState,\n      action: {\n        payload: { clueNum, direction}\n      }\n    },\n    dispatch,\n    done\n  ) {\n    const state = getState()\n    const currentPuzzleGrid = getCurrentPuzzleGrid(state)\n    const selectedCell = currentPuzzleGrid.find(function(item){\n        return clueNum === item.clueNum\n    });\n    dispatch(updateUI(selectedCell.index, direction));\n\n    done();\n  }\n});\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import React from \"react\";\nimport \"../css/App.css\";\nimport { Provider } from \"react-redux\";\nimport { Router } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport createApplicationStore from \"../createApplicationStore\";\nimport history from \"../util/history\";\n\nexport default function App() {\n  const store = createApplicationStore();\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <Layout />\n      </Router>\n    </Provider>\n  );\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { createLogicMiddleware } from \"redux-logic\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducers from \"./reducers\";\nimport rootLogic from \"./logic\";\n\nexport default function createApplicationStore() {\n  const logicMiddleware = createLogicMiddleware(rootLogic);\n  const logicEnhancer = applyMiddleware(logicMiddleware);\n  const store = createStore(reducers, composeWithDevTools(logicEnhancer));\n  return store;\n}\n"],"sourceRoot":""}