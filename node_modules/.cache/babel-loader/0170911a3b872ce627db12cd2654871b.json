{"ast":null,"code":"import { createLogic } from \"redux-logic\";\nimport { updateUI } from \"../actions\";\nimport { getCurrentPuzzleGrid } from \"../selectors\";\nexport default createLogic({\n  type: \"CLUE_LIST_ITEM_CLICKED\",\n\n  async process({\n    getState,\n    action: {\n      payload: {\n        clueNum,\n        direction\n      }\n    }\n  }, dispatch, done) {\n    const state = getState();\n    const currentPuzzleGrid = getCurrentPuzzleGrid(state);\n    const selectedCell = currentPuzzleGrid.find(function (item) {\n      return clueNum === item.clueNum;\n    });\n    dispatch(updateUI(selectedCell.index, direction));\n    done();\n  }\n\n});","map":{"version":3,"sources":["/Users/peter/Desktop/code/word-up/src/logic/clueListItemClicked.js"],"names":["createLogic","updateUI","getCurrentPuzzleGrid","type","process","getState","action","payload","clueNum","direction","dispatch","done","state","currentPuzzleGrid","selectedCell","find","item","index"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SACEC,QADF,QAEO,YAFP;AAIA,SACIC,oBADJ,QAEO,cAFP;AAIA,eAAeF,WAAW,CAAC;AACzBG,EAAAA,IAAI,EAAE,wBADmB;;AAEzB,QAAMC,OAAN,CACE;AACEC,IAAAA,QADF;AAEEC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX;AADH;AAFV,GADF,EAOEC,QAPF,EAQEC,IARF,EASE;AACA,UAAMC,KAAK,GAAGP,QAAQ,EAAtB;AACA,UAAMQ,iBAAiB,GAAGX,oBAAoB,CAACU,KAAD,CAA9C;AACA,UAAME,YAAY,GAAGD,iBAAiB,CAACE,IAAlB,CAAuB,UAASC,IAAT,EAAc;AACtD,aAAOR,OAAO,KAAKQ,IAAI,CAACR,OAAxB;AACH,KAFoB,CAArB;AAGAE,IAAAA,QAAQ,CAACT,QAAQ,CAACa,YAAY,CAACG,KAAd,EAAqBR,SAArB,CAAT,CAAR;AAEAE,IAAAA,IAAI;AACL;;AApBwB,CAAD,CAA1B","sourcesContent":["import { createLogic } from \"redux-logic\";\nimport {\n  updateUI\n} from \"../actions\";\n\nimport {\n    getCurrentPuzzleGrid\n} from \"../selectors\"\n\nexport default createLogic({\n  type: \"CLUE_LIST_ITEM_CLICKED\",\n  async process(\n    {\n      getState,\n      action: {\n        payload: { clueNum, direction}\n      }\n    },\n    dispatch,\n    done\n  ) {\n    const state = getState()\n    const currentPuzzleGrid = getCurrentPuzzleGrid(state)\n    const selectedCell = currentPuzzleGrid.find(function(item){\n        return clueNum === item.clueNum\n    });\n    dispatch(updateUI(selectedCell.index, direction));\n\n    done();\n  }\n});\n"]},"metadata":{},"sourceType":"module"}