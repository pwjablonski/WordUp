{"ast":null,"code":"import produce from \"immer\";\nimport { handleActions } from \"redux-actions\";\nimport { puzzleCreated, updateCellFill, gridUpdated, authorChanged, titleChanged } from \"../actions\";\nimport createEmptyPuzzle from \"../util/createEmptyPuzzle\";\nimport { clueTextChanged } from \"../actions/puzzles\";\nconst initialState = {};\n/* eslint-disable no-param-reassign */\n\nexport default handleActions({\n  [puzzleCreated]: (state, {\n    payload: {\n      puzzleKey\n    }\n  }) => produce(state, draft => {\n    draft[puzzleKey] = createEmptyPuzzle(puzzleKey, 15, 15);\n  }),\n  [updateCellFill]: (state, {\n    payload: {\n      currentPuzzleKey,\n      cell,\n      fill\n    }\n  }) => produce(state, draft => {\n    draft[currentPuzzleKey][\"grid\"][cell][\"fill\"] = fill;\n  }),\n  [gridUpdated]: (state, {\n    payload: {\n      currentPuzzleKey,\n      grid,\n      clues\n    }\n  }) => produce(state, draft => {\n    draft[currentPuzzleKey][\"grid\"] = grid;\n    draft[currentPuzzleKey][\"clues\"] = clues;\n  }),\n  [clueTextChanged]: (state, {\n    payload: {\n      currentPuzzleKey,\n      direction,\n      index,\n      value\n    }\n  }) => produce(state, draft => {\n    draft[currentPuzzleKey][\"clues\"][direction][index][\"text\"] = value;\n  }),\n  [authorChanged]: (state, {\n    payload: {\n      currentPuzzleKey,\n      direction,\n      index,\n      value\n    }\n  }) => produce(state, draft => {\n    draft[currentPuzzleKey][\"author\"] = value;\n  }),\n  [titleChanged]: (state, {\n    payload: {\n      currentPuzzleKey,\n      direction,\n      index,\n      value\n    }\n  }) => produce(state, draft => {\n    draft[currentPuzzleKey][\"title\"] = value;\n  })\n}, initialState);","map":{"version":3,"sources":["/Users/peter/Desktop/code/word-up/src/reducers/puzzles.js"],"names":["produce","handleActions","puzzleCreated","updateCellFill","gridUpdated","authorChanged","titleChanged","createEmptyPuzzle","clueTextChanged","initialState","state","payload","puzzleKey","draft","currentPuzzleKey","cell","fill","grid","clues","direction","index","value"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SACEC,aADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,YALF,QAMO,YANP;AAOA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA;;AACA,eAAeR,aAAa,CAC1B;AACE,GAACC,aAAD,GAAiB,CAACQ,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAAX,GAAR,KACfZ,OAAO,CAACU,KAAD,EAAQG,KAAK,IAAI;AACtBA,IAAAA,KAAK,CAACD,SAAD,CAAL,GAAmBL,iBAAiB,CAACK,SAAD,EAAY,EAAZ,EAAgB,EAAhB,CAApC;AACD,GAFM,CAFX;AAKE,GAACT,cAAD,GAAkB,CAACO,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAE;AAAEG,MAAAA,gBAAF;AAAoBC,MAAAA,IAApB;AAA0BC,MAAAA;AAA1B;AAAX,GAAR,KAChBhB,OAAO,CAACU,KAAD,EAAQG,KAAK,IAAI;AACtBA,IAAAA,KAAK,CAACC,gBAAD,CAAL,CAAwB,MAAxB,EAAgCC,IAAhC,EAAsC,MAAtC,IAAgDC,IAAhD;AACD,GAFM,CANX;AASE,GAACZ,WAAD,GAAe,CAACM,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAE;AAACG,MAAAA,gBAAD;AAAmBG,MAAAA,IAAnB;AAAyBC,MAAAA;AAAzB;AAAX,GAAR,KACblB,OAAO,CAACU,KAAD,EAAQG,KAAK,IAAI;AACtBA,IAAAA,KAAK,CAACC,gBAAD,CAAL,CAAwB,MAAxB,IAAkCG,IAAlC;AACAJ,IAAAA,KAAK,CAACC,gBAAD,CAAL,CAAwB,OAAxB,IAAmCI,KAAnC;AACD,GAHM,CAVX;AAcE,GAACV,eAAD,GAAmB,CAACE,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAE;AAACG,MAAAA,gBAAD;AAAmBK,MAAAA,SAAnB;AAA8BC,MAAAA,KAA9B;AAAqCC,MAAAA;AAArC;AAAX,GAAR,KACjBrB,OAAO,CAACU,KAAD,EAAQG,KAAK,IAAI;AACtBA,IAAAA,KAAK,CAACC,gBAAD,CAAL,CAAwB,OAAxB,EAAiCK,SAAjC,EAA4CC,KAA5C,EAAmD,MAAnD,IAA6DC,KAA7D;AACD,GAFM,CAfX;AAkBE,GAAChB,aAAD,GAAiB,CAACK,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAE;AAACG,MAAAA,gBAAD;AAAmBK,MAAAA,SAAnB;AAA8BC,MAAAA,KAA9B;AAAqCC,MAAAA;AAArC;AAAX,GAAR,KACfrB,OAAO,CAACU,KAAD,EAAQG,KAAK,IAAI;AACtBA,IAAAA,KAAK,CAACC,gBAAD,CAAL,CAAwB,QAAxB,IAAoCO,KAApC;AACD,GAFM,CAnBX;AAsBE,GAACf,YAAD,GAAgB,CAACI,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAE;AAACG,MAAAA,gBAAD;AAAmBK,MAAAA,SAAnB;AAA8BC,MAAAA,KAA9B;AAAqCC,MAAAA;AAArC;AAAX,GAAR,KACdrB,OAAO,CAACU,KAAD,EAAQG,KAAK,IAAI;AACtBA,IAAAA,KAAK,CAACC,gBAAD,CAAL,CAAwB,OAAxB,IAAmCO,KAAnC;AACD,GAFM;AAvBX,CAD0B,EA6B1BZ,YA7B0B,CAA5B","sourcesContent":["import produce from \"immer\";\nimport { handleActions } from \"redux-actions\";\nimport {\n  puzzleCreated,\n  updateCellFill,\n  gridUpdated,\n  authorChanged,\n  titleChanged\n} from \"../actions\";\nimport createEmptyPuzzle from \"../util/createEmptyPuzzle\"\nimport { clueTextChanged } from \"../actions/puzzles\";\n\nconst initialState = {};\n\n/* eslint-disable no-param-reassign */\nexport default handleActions(\n  {\n    [puzzleCreated]: (state, { payload: { puzzleKey } }) =>\n      produce(state, draft => {\n        draft[puzzleKey] = createEmptyPuzzle(puzzleKey, 15, 15);\n      }),\n    [updateCellFill]: (state, { payload: { currentPuzzleKey, cell, fill } }) =>\n      produce(state, draft => {\n        draft[currentPuzzleKey][\"grid\"][cell][\"fill\"] = fill;\n      }),\n    [gridUpdated]: (state, { payload: {currentPuzzleKey, grid, clues} }) =>\n      produce(state, draft => {\n        draft[currentPuzzleKey][\"grid\"] = grid;\n        draft[currentPuzzleKey][\"clues\"] = clues;\n      }),\n    [clueTextChanged]: (state, { payload: {currentPuzzleKey, direction, index, value} }) =>\n      produce(state, draft => {\n        draft[currentPuzzleKey][\"clues\"][direction][index][\"text\"] = value;\n      }),\n    [authorChanged]: (state, { payload: {currentPuzzleKey, direction, index, value} }) =>\n      produce(state, draft => {\n        draft[currentPuzzleKey][\"author\"] = value;\n      }),\n    [titleChanged]: (state, { payload: {currentPuzzleKey, direction, index, value} }) =>\n      produce(state, draft => {\n        draft[currentPuzzleKey][\"title\"] = value;\n      }),\n\n  },\n  initialState\n);"]},"metadata":{},"sourceType":"module"}