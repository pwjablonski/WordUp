{"ast":null,"code":"import \"core-js/modules/es6.function.name\";\nimport { throwError } from 'rxjs';\nexport default function execProcessFn(_ref) {\n  var depObj = _ref.depObj,\n      dispatch = _ref.dispatch,\n      dispatch$ = _ref.dispatch$,\n      dispatchReturn = _ref.dispatchReturn,\n      done = _ref.done,\n      name = _ref.name,\n      processFn = _ref.processFn;\n\n  try {\n    var retValue = processFn(depObj, dispatch, done);\n\n    if (dispatchReturn) {\n      // processOption.dispatchReturn true\n      // returning undefined won't dispatch\n      if (typeof retValue === 'undefined') {\n        dispatch$.complete();\n      } else {\n        // defined return value, dispatch\n        dispatch(retValue); // handles observables, promises, ...\n      }\n    }\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(\"unhandled exception in logic named: \".concat(name), err); // wrap in observable since might not be an error object\n\n    dispatch(throwError(err));\n  }\n}","map":null,"metadata":{},"sourceType":"module"}