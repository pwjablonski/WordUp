{"ast":null,"code":"var _jsxFileName = \"/Users/peter/Desktop/code/word-up/src/components/Topbar.js\";\nimport React from \"react\";\nimport \"../css/App.css\";\nimport ContentEditable from 'react-contenteditable';\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentPuzzleTitle, getCurrentPuzzleAuthor, getCurrentPuzzleKey } from \"../selectors\";\nimport { titleChanged, authorChanged } from \"../actions\";\nexport default function Topbar() {\n  const dispatch = useDispatch();\n  const author = useSelector(getCurrentPuzzleAuthor);\n  const title = useSelector(getCurrentPuzzleTitle);\n  const currentPuzzleKey = useSelector(getCurrentPuzzleKey);\n\n  function handleTitleChange(e) {\n    dispatch(titleChanged(currentPuzzleKey, e.target.value));\n  }\n\n  function handleAuthorChange(e) {\n    dispatch(authorChanged(currentPuzzleKey, e.target.value));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"topbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"topbar-puzzle-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"topbar-puzzle-info-tittle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Word Up\"), React.createElement(\"div\", {\n    className: \"topbar-puzzle-author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"By \"), React.createElement(ContentEditable, {\n    html: author,\n    onChange: handleAuthorChange,\n    tagName: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"topbar-tools\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"topbar-button topbar-button-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"\",\n    icon: faCog,\n    size: \"2x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/peter/Desktop/code/word-up/src/components/Topbar.js"],"names":["React","ContentEditable","faCog","FontAwesomeIcon","useDispatch","useSelector","getCurrentPuzzleTitle","getCurrentPuzzleAuthor","getCurrentPuzzleKey","titleChanged","authorChanged","Topbar","dispatch","author","title","currentPuzzleKey","handleTitleChange","e","target","value","handleAuthorChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,SAASC,KAAT,QAAsB,mCAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,qBADF,EAEEC,sBAFF,EAGEC,mBAHF,QAIO,cAJP;AAKA,SACEC,YADF,EAEEC,aAFF,QAGO,YAHP;AAKA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,MAAM,GAAGR,WAAW,CAACE,sBAAD,CAA1B;AACA,QAAMO,KAAK,GAAGT,WAAW,CAACC,qBAAD,CAAzB;AACA,QAAMS,gBAAgB,GAAGV,WAAW,CAACG,mBAAD,CAApC;;AAEA,WAASQ,iBAAT,CAA2BC,CAA3B,EAA6B;AAC3BL,IAAAA,QAAQ,CAACH,YAAY,CAACM,gBAAD,EAAmBE,CAAC,CAACC,MAAF,CAASC,KAA5B,CAAb,CAAR;AACD;;AAED,WAASC,kBAAT,CAA4BH,CAA5B,EAA8B;AAC5BL,IAAAA,QAAQ,CAACF,aAAa,CAACK,gBAAD,EAAmBE,CAAC,CAACC,MAAF,CAASC,KAA5B,CAAd,CAAR;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADA,EAEE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAEN,MADR;AAEE,IAAA,QAAQ,EAAEO,kBAFZ;AAGE,IAAA,OAAO,EAAC,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJF,CADF,EAcE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,SAAS,EAAC,EADZ;AAEE,IAAA,IAAI,EAAElB,KAFR;AAGE,IAAA,IAAI,EAAC,IAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAdF,CADF;AA0BD","sourcesContent":["import React from \"react\";\nimport \"../css/App.css\";\nimport ContentEditable from 'react-contenteditable'\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCurrentPuzzleTitle,\n  getCurrentPuzzleAuthor,\n  getCurrentPuzzleKey\n} from \"../selectors\";\nimport {\n  titleChanged,\n  authorChanged\n} from \"../actions\";\n\nexport default function Topbar() {\n  const dispatch = useDispatch();\n  const author = useSelector(getCurrentPuzzleAuthor);\n  const title = useSelector(getCurrentPuzzleTitle);\n  const currentPuzzleKey = useSelector(getCurrentPuzzleKey);\n\n  function handleTitleChange(e){\n    dispatch(titleChanged(currentPuzzleKey, e.target.value));\n  }\n\n  function handleAuthorChange(e){\n    dispatch(authorChanged(currentPuzzleKey, e.target.value));\n  }\n\n  return (\n    <div className=\"topbar\">\n      <div className=\"topbar-puzzle-info\"> \n        <div className=\"topbar-puzzle-info-tittle\">\n          Word Up\n        </div>\n        <div className=\"topbar-puzzle-author\">\n        <span>By </span>\n          <ContentEditable\n            html={author}\n            onChange={handleAuthorChange}\n            tagName='span'\n          />\n        </div>\n      </div>\n      <div className=\"topbar-tools\">\n        <div className=\"topbar-button topbar-button-item\">\n          <FontAwesomeIcon\n            className=\"\"\n            icon={faCog}\n            size=\"2x\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}