{"ast":null,"code":"var _jsxFileName = \"/Users/peter/Desktop/code/word-up/src/components/Cell.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../css/App.css\";\nimport classnames from \"classnames\";\nexport default function Cell({\n  cellData,\n  isHighlighted,\n  isSelected,\n  onCellSelected\n}) {\n  const index = cellData.index,\n        fill = cellData.fill,\n        clueNum = cellData.clueNum;\n  const xOffset = 33 * (index % 15);\n  const yOffset = 33 * Math.floor(index / 15);\n  const isBlack = fill === \".\";\n  return React.createElement(\"g\", {\n    onClick: () => onCellSelected(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: 3 + xOffset,\n    y: 3 + yOffset,\n    width: \"33.00\",\n    height: \"33.00\",\n    className: classnames(\"cell\", {\n      \"cell-selected\": isSelected\n    }, {\n      \"cell-black\": isBlack\n    }, {\n      \"cell-highlighted\": isHighlighted\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    x: 5 + xOffset,\n    y: 14.5 + yOffset,\n    textAnchor: \"start\",\n    fontSize: \"11.00\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, clueNum), React.createElement(\"text\", {\n    x: 19.5 + xOffset,\n    y: 33.25 + yOffset,\n    textAnchor: \"middle\",\n    fontSize: 22 - fill.length * 2.5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, fill));\n}\nCell.propTypes = {\n  cellData: PropTypes.object.isRequired,\n  onCellSelected: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/peter/Desktop/code/word-up/src/components/Cell.js"],"names":["React","PropTypes","classnames","Cell","cellData","isHighlighted","isSelected","onCellSelected","index","fill","clueNum","xOffset","yOffset","Math","floor","isBlack","length","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,gBAAP;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,eAAe,SAASC,IAAT,CAAc;AAC3BC,EAAAA,QAD2B;AAE3BC,EAAAA,aAF2B;AAG3BC,EAAAA,UAH2B;AAI3BC,EAAAA;AAJ2B,CAAd,EAKZ;AAAA,QAEOC,KAFP,GAEgCJ,QAFhC,CAEOI,KAFP;AAAA,QAEcC,IAFd,GAEgCL,QAFhC,CAEcK,IAFd;AAAA,QAEoBC,OAFpB,GAEgCN,QAFhC,CAEoBM,OAFpB;AAGD,QAAMC,OAAO,GAAG,MAAMH,KAAK,GAAG,EAAd,CAAhB;AACA,QAAMI,OAAO,GAAG,KAAKC,IAAI,CAACC,KAAL,CAAWN,KAAK,GAAG,EAAnB,CAArB;AACA,QAAMO,OAAO,GAAGN,IAAI,KAAK,GAAzB;AAEA,SACE;AAAG,IAAA,OAAO,EAAE,MAAMF,cAAc,CAACC,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,CAAC,EAAE,IAAIG,OADT;AAEE,IAAA,CAAC,EAAE,IAAIC,OAFT;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,MAAM,EAAC,OAJT;AAKE,IAAA,SAAS,EAAEV,UAAU,CACnB,MADmB,EAEnB;AAAE,uBAAiBI;AAAnB,KAFmB,EAGnB;AAAE,oBAAcS;AAAhB,KAHmB,EAInB;AAAE,0BAAoBV;AAAtB,KAJmB,CALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaE;AACE,IAAA,CAAC,EAAE,IAAIM,OADT;AAEE,IAAA,CAAC,EAAE,OAAOC,OAFZ;AAGE,IAAA,UAAU,EAAC,OAHb;AAIE,IAAA,QAAQ,EAAC,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGF,OANH,CAbF,EAqBE;AACE,IAAA,CAAC,EAAE,OAAOC,OADZ;AAEE,IAAA,CAAC,EAAE,QAAQC,OAFb;AAGE,IAAA,UAAU,EAAC,QAHb;AAIE,IAAA,QAAQ,EAAE,KAAKH,IAAI,CAACO,MAAL,GAAc,GAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGP,IANH,CArBF,CADF;AAgCD;AAEDN,IAAI,CAACc,SAAL,GAAiB;AACfb,EAAAA,QAAQ,EAAEH,SAAS,CAACiB,MAAV,CAAiBC,UADZ;AAEfZ,EAAAA,cAAc,EAAEN,SAAS,CAACmB,IAAV,CAAeD;AAFhB,CAAjB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../css/App.css\";\nimport classnames from \"classnames\";\n\nexport default function Cell({\n  cellData,\n  isHighlighted,\n  isSelected,\n  onCellSelected\n}) {\n  \n  const { index, fill, clueNum } = cellData\n  const xOffset = 33 * (index % 15);\n  const yOffset = 33 * Math.floor(index / 15);\n  const isBlack = fill === \".\";\n\n  return (\n    <g onClick={() => onCellSelected(index)}>\n      <rect\n        x={3 + xOffset}\n        y={3 + yOffset}\n        width=\"33.00\"\n        height=\"33.00\"\n        className={classnames(\n          \"cell\",\n          { \"cell-selected\": isSelected },\n          { \"cell-black\": isBlack },\n          { \"cell-highlighted\": isHighlighted }\n        )}\n      />\n      <text\n        x={5 + xOffset}\n        y={14.5 + yOffset}\n        textAnchor=\"start\"\n        fontSize=\"11.00\"\n      >\n        {clueNum}\n      </text>\n      <text\n        x={19.5 + xOffset}\n        y={33.25 + yOffset}\n        textAnchor=\"middle\"\n        fontSize={22 - fill.length * 2.5}\n      >\n        {fill}\n      </text>\n    </g>\n  );\n}\n\nCell.propTypes = {\n  cellData: PropTypes.object.isRequired,\n  onCellSelected: PropTypes.func.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}