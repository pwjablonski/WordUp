{"ast":null,"code":"import { createLogic } from \"redux-logic\";\nimport { updateUI } from \"../actions\";\nimport { getCurrentCell, getCurrentDirection } from \"../selectors\";\nexport default createLogic({\n  type: \"CELL_SELECTED\",\n\n  async process({\n    getState,\n    action: {\n      payload: {\n        cell\n      }\n    }\n  }, dispatch, done) {\n    const state = getState();\n    const currentCell = getCurrentCell(state);\n    const currentDirection = getCurrentDirection(state);\n\n    if (currentCell === cell) {\n      if (currentDirection === \"across\") {\n        dispatch(updateUI(currentCell, \"down\"));\n      } else if (currentDirection === \"down\") {\n        dispatch(updateUI(currentCell, \"across\"));\n      }\n    } else {\n      dispatch(updateUI(cell, currentDirection));\n    }\n\n    done();\n  }\n\n});","map":{"version":3,"sources":["/Users/peter/Desktop/code/word-up/src/logic/cellSelected.js"],"names":["createLogic","updateUI","getCurrentCell","getCurrentDirection","type","process","getState","action","payload","cell","dispatch","done","state","currentCell","currentDirection"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SACEC,QADF,QAEO,YAFP;AAGA,SACEC,cADF,EAEEC,mBAFF,QAGO,cAHP;AAMA,eAAeH,WAAW,CAAC;AACzBI,EAAAA,IAAI,EAAE,eADmB;;AAEzB,QAAMC,OAAN,CACE;AACEC,IAAAA,QADF;AAEEC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AAAEC,QAAAA;AAAF;AADH;AAFV,GADF,EAOEC,QAPF,EAQEC,IARF,EASE;AACA,UAAMC,KAAK,GAAGN,QAAQ,EAAtB;AACA,UAAMO,WAAW,GAAGX,cAAc,CAACU,KAAD,CAAlC;AACA,UAAME,gBAAgB,GAAGX,mBAAmB,CAACS,KAAD,CAA5C;;AAEA,QAAIC,WAAW,KAAKJ,IAApB,EAA0B;AACxB,UAAIK,gBAAgB,KAAK,QAAzB,EAAmC;AACjCJ,QAAAA,QAAQ,CAACT,QAAQ,CAACY,WAAD,EAAc,MAAd,CAAT,CAAR;AACD,OAFD,MAEO,IAAIC,gBAAgB,KAAK,MAAzB,EAAiC;AACtCJ,QAAAA,QAAQ,CAACT,QAAQ,CAACY,WAAD,EAAc,QAAd,CAAT,CAAR;AACD;AACF,KAND,MAMO;AACLH,MAAAA,QAAQ,CAACT,QAAQ,CAACQ,IAAD,EAAOK,gBAAP,CAAT,CAAR;AACD;;AACDH,IAAAA,IAAI;AACL;;AA1BwB,CAAD,CAA1B","sourcesContent":["import { createLogic } from \"redux-logic\";\nimport {\n  updateUI\n} from \"../actions\";\nimport {\n  getCurrentCell,\n  getCurrentDirection\n} from \"../selectors\";\n\n\nexport default createLogic({\n  type: \"CELL_SELECTED\",\n  async process(\n    {\n      getState,\n      action: {\n        payload: { cell }\n      }\n    },\n    dispatch,\n    done\n  ) {\n    const state = getState();\n    const currentCell = getCurrentCell(state);\n    const currentDirection = getCurrentDirection(state);\n\n    if (currentCell === cell) {\n      if (currentDirection === \"across\") {\n        dispatch(updateUI(currentCell, \"down\"));\n      } else if (currentDirection === \"down\") {\n        dispatch(updateUI(currentCell, \"across\"));\n      }\n    } else {\n      dispatch(updateUI(cell, currentDirection));\n    }\n    done();\n  }\n});\n"]},"metadata":{},"sourceType":"module"}